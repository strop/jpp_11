Prog . Program ::= [Stmt];

---------------
-- Instrukcje
---------------

(:[]).    [Stmt] ::= Stmt ";";
(:).      [Stmt] ::= Stmt ";" [Stmt];

SAssign . Stmt ::= Ident "=" Expr;
SWhile . Stmt ::= "while" "(" Expr ")" Stmt;
SIf . Stmt ::= "if" "(" Expr ")" Stmt;
SIfElse . Stmt ::= "if" "(" Expr ")" Stmt "else" Stmt; 

----------------
-- Deklaracje
----------------

DFun . Decl ::= "fun" Ident "(" ")";
DFunP . Decl ::= "fun" Ident "(" Ident ")";

DProc . Decl ::= "proc" Ident "(" ")";
DProcP . Decl ::= "proc" Ident "(" Ident ")";

--------------
-- WyraÅ¼enia
--------------

EBool . Expr9 ::= Boo;
ENum . Expr9 ::= NumbI;
EReal . Expr9 ::= NumbR;

EVar . Expr8 ::= Ident;
EArr . Expr8 ::= Ident "[" "]";
EFunc . Expr8 ::= Ident "(" ")";
EFuncP . Expr8 ::= Ident "(" Expr ")";

ENeg . Expr7 ::= "!" Expr6;

EMod . Expr6 ::= Expr6 "%" Expr7;
EDiv . Expr6 ::= Expr6 "/" Expr7;
ETimes . Expr6 ::= Expr6 "*" Expr7;
EMinus . Expr5 ::= Expr5 "-" Expr6;
EPlus . Expr5 ::= Expr5 "+" Expr6;

EGeq . Expr4 ::= Expr4 ">=" Expr5;
ELeq . Expr4 ::= Expr4 "<=" Expr5;
ELess . Expr4 ::= Expr4 "<" Expr5;
EGrea . Expr4 ::= Expr4 ">" Expr5;

ENeq . Expr3 ::= Expr3 "!=" Expr4;
EEq . Expr3 ::= Expr3 "==" Expr4;

EAnd . Expr2 ::= Expr2 "&&" Expr3;
EOr . Expr ::= Expr "||" Expr2;

coercions Expr 20;

BTrue . Boo ::= "true";
BFalse . Boo ::= "false"; 
NumI . NumbI ::= Integer;
NumR . NumbR ::= Double;
